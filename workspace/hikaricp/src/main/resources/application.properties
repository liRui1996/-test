#
#server.address=127.0.0.1
#server.port=8999
###mysql链接信息
spring.datasource.url=jdbc:mysql://127.0.0.1:3306/mysql?serverTimezone=UTC
#用户名/密码
spring.datasource.username=root
spring.datasource.password=password
#驱动
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
####数据源类别
#spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
#
##spring.datasource.druid.url=jdbc:mysql://127.0.0.1:3306/mysql?serverTimezone=UTC
###用户名/密码
##spring.datasource.druid.username=root
##spring.datasource.druid.password=password
###驱动
##spring.datasource.druid.driver-class-name=com.mysql.cj.jdbc.Driver
##初始化大小。最大。最小
#spring.datasource.druid.initial-size=5
#spring.datasource.druid.min-idle=5
#spring.datasource.druid.max-active=20
##配置获取连接等待超时时间，单位是毫秒
#spring.datasource.druid.max-wait=60000
##配置间隔多久才能进行一次检测，检测需要关闭的空闲连接，单位是毫秒
#spring.datasource.druid.time-between-eviction-runs-millis=60000
##配置一个连接在池中最小生存时间，代为是毫秒
#spring.datasource.druid.min-evictable-idle-time-millis=300000
#spring.datasource.druid.validation-query=SELECT 1 from DUAL
#spring.datasource.druid.test-while-idle=true
#spring.datasource.druid.test-on-borrow=false
#spring.datasource.druid.test-on-return=false
##打开PScache，并制定每个连接上的pscache的大小
#spring.datasource.druid.pool-prepared-statements=true
#spring.datasource.druid.max-pool-prepared-statement-per-connection-size=20
##配置监控统计拦截的filters，并去掉监控界面sql无法统计，‘wall‘用于防火墙
#spring.datasource.druid.filters=stat,wall,log4j
##通过connectproperties属性来打开mergesql功能，慢sql记录
#spring.datasource.druid.connection-properties=druid.stat.mergeSql=true;druid.stat.slowSqlMills=5000
##合并多个druiddatasource的监控数据
#spring.datasource.druid.use-global-data-source-stat=true
#数据源类别
spring.datasource.type=com.zaxxer.hikari.HikariDataSource
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.maximum-pool-size=15
spring.datasource.hikari.auto-commit=true
spring.datasource.hikari.idle-timeout=30000
spring.datasource.hikari.pool-name=DatebookHikariCP
spring.datasource.hikari.max-lifetime=1800000
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.connection-test-query=SELECT 1




